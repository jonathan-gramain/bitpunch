/*
 * Xiph.org OGG container format
 *
 * https://www.xiph.org/ogg/
 */

let SignedInt = integer { signed: true; endian: 'little'; };
let UnsignedInt = integer { signed: false; endian: 'little'; };

let s64 = byte[8]: SignedInt;

let u8 = byte: UnsignedInt;
let u32 = byte[4]: UnsignedInt;

file {
    ogg_pages: OggPage[];
}

let OggPage = struct {
    hdr:      OggPageHdr;
    segments: OggPageSegment[hdr.n_page_segments];

    let OggPageHdr = struct {
        capture_pattern:           byte[4]: string;
        stream_structure_version:  u8;
        header_type_flags:         u8; // bit-mask
        absolute_granule_position: s64;
        stream_serial_number:      u32;
        page_sequence_no:          u32;
        page_checksum:             u32;
        n_page_segments:           u8;
        segment_sizes:             u8[n_page_segments];
    };

    let OggPageSegment = struct {
        segment_data: byte[?segment_size];

        let ?segment_size = hdr.segment_sizes[index(segments, self)];
    };
};
