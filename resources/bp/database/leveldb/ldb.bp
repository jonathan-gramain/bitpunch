/*
 * LevelDB by Google, Inc.
 *
 * SST Table format
 *
 * https://github.com/google/leveldb/blob/master/doc/table_format.md
 */


// Define some basic types used by LevelDB

let FixInt = integer {
    @signed = false;
    @endian = 'little';
};
let FixInt8  = byte     <> FixInt;
let FixInt32 = [4] byte <> FixInt;
let VarInt   = varint;


// Describe LDB file structure

env("DATASOURCE") <> struct {
    payload: [] byte;
    footer:  struct {
        metaindex_handle: BlockHandle;
        index_handle:     BlockHandle;
                          []  byte;
        magic:            [8] byte;

        @span = 48;
    };

    let ?index     = footer.index_handle;
    let ?metaindex = footer.metaindex_handle;
};

let BlockHandle = struct {
    offset: VarInt;
    size:   VarInt;

    let ?stored_block =
        payload[offset ..
                offset + size + sizeof(BlockTrailer)] <> FileBlock;
};

let BlockTrailer = struct {
    blocktype: FixInt8;
    crc:       FixInt32;
};

let FileBlock = struct {
    if (trailer.blocktype == 0) { // uncompressed
        DataBlock;
    }
    if (trailer.blocktype == 1) {
        CompressedDataBlock;
    }
    trailer: BlockTrailer;
};

let DataBlock = struct {
    let KeyValue = struct {
        key_shared_size:     VarInt;
        key_non_shared_size: VarInt;
        value_size:          VarInt;
        key_non_shared:      [key_non_shared_size] byte;
        value:               [value_size] byte;
    };
    entries:     [] KeyValue;
    restarts:    [nb_restarts] FixInt32;
    nb_restarts: FixInt32;
};

let CompressedDataBlock = snappy <> DataBlock;
