/*
 * LevelDB by Google, Inc.
 *
 * SST Table format
 *
 * https://github.com/google/leveldb/blob/master/doc/table_format.md
 */

let FixInt   = integer { signed: false; endian: 'little'; };
let FixInt8  = byte: FixInt;
let FixInt32 = byte[4]: FixInt;
let VarInt   = byte[]: varint;

let CompressedDataBlock = byte[]: snappy: DataBlock;

let DataBlock = struct {
    entries:     KeyValue[];
    restarts:    FixInt32[nb_restarts];
    nb_restarts: FixInt32;
};

let KeyValue = struct {
    key_shared_size:     VarInt;
    key_non_shared_size: VarInt;
    value_size:          VarInt;
    key_non_shared:      byte[key_non_shared_size];
    value:               byte[value_size];
};

let BlockTrailer = struct {
    blocktype: FixInt8;
    crc:       FixInt32;
};

let FileBlock = struct {
    if (trailer.blocktype == 0) { // uncompressed
        :    DataBlock;
    }
    if (trailer.blocktype == 1) {
        :    CompressedDataBlock;
    }
    trailer: BlockTrailer;
};

let BlockHandle = struct {
    offset: VarInt;
    size:   VarInt;

    let ?stored_block =
        file.payload[offset .. offset + size + sizeof(BlockTrailer)]
            : FileBlock;
};

let Footer = struct {
    metaindex_handle: BlockHandle;
    index_handle:     BlockHandle;
    :                 byte[];
    magic:            byte[8];
    span 48;
};

file {
    payload: byte[];
    footer:  Footer;

    let ?index =     footer.index_handle;
    let ?metaindex = footer.metaindex_handle;

    //:BlockHandle {
    //    ?index.entries[*].value;
    //    ?metaindex.entries[*].value;
    //};
}
