/*
 * LevelDB by Google, Inc.
 *
 * SST Table format
 *
 * https://github.com/google/leveldb/blob/master/doc/table_format.md
 */

type u32 = byte[4]: integer(signed=false, endian=little);

type VarInt = byte[]: varint;

type CompressedDataBlock = byte[]: snappy: DataBlock;

struct DataBlock {
    KeyValue[] entries;
    u32[nb_restarts] restarts;
    u32 nb_restarts;
};

struct KeyValue {
    VarInt key_shared_size;
    VarInt key_non_shared_size;
    VarInt value_size;
    byte[key_non_shared_size] key_non_shared;
    byte[value_size] value;
};

struct BlockTrailer {
    byte blocktype: integer(signed=false);
    u32 crc;
};

struct FileBlock {
    if (trailer.blocktype == 0) { // uncompressed
        DataBlock;
    }
    if (trailer.blocktype == 1) {
        CompressedDataBlock;
    }
    BlockTrailer trailer;
};

struct BlockHandle {
    VarInt offset;
    VarInt size;

    ?stored_block
        => file.payload[offset .. offset + size + sizeof(BlockTrailer)]
           : FileBlock;
};

struct Footer {
    BlockHandle metaindex_handle;
    BlockHandle index_handle;
    byte[];
    byte[8] magic;
    span 48;
};

file {
    byte[] payload;
    Footer footer;

    ?index => footer.index_handle;
    ?metaindex => footer.metaindex_handle;

    //:BlockHandle {
    //    ?index.entries[*].value;
    //    ?metaindex.entries[*].value;
    //};
}
